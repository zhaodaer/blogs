(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{482:function(t,_,s){"use strict";s.r(_);var a=s(2),r=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式：")]),t._v(" "),_("p",[t._v("作用：减少烂代码，让项目更好的维护")]),t._v(" "),_("hr"),t._v(" "),_("p",[_("strong",[t._v("前言：看懂UML类图和时序图")])]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"C:/Users/%E4%B8%9C%E7%91%9E/AppData/Roaming/Typora/typora-user-images/image-20231215180312104.png",alt:"image-20231215180312104"}}),t._v(" "),_("h4",{attrs:{id:"_1、简单工厂模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、简单工厂模式"}},[t._v("#")]),t._v(" 1、简单工厂模式：")]),t._v(" "),_("p",[_("strong",[t._v("概念：")])]),t._v(" "),_("p",[t._v("当去调用一个函数时，我们不需要知道函数内部实现的逻辑，我们只需要知道该函数的参数，并且能将参数传递进去，并返回一个对象就可以了。可以说是调用接口")]),t._v(" "),_("p",[t._v("简单工厂模式包含如下角色：")]),t._v(" "),_("ul",[_("li",[_("ul",[_("li",[_("p",[t._v("Factory：工厂角色")]),t._v(" "),_("p",[t._v("工厂角色负责实现创建所有实例的内部逻辑")])])])]),t._v(" "),_("li",[_("ul",[_("li",[_("p",[t._v("Product：抽象产品角色")]),t._v(" "),_("p",[t._v("抽象产品角色是所创建的所有对象的父类，负责描述所有实例所共有的公共接口")])])])]),t._v(" "),_("li",[_("ul",[_("li",[_("p",[t._v("ConcreteProduct：具体产品角色")]),t._v(" "),_("p",[t._v("具体产品角色是创建目标，所有创建的对象都充当这个角色的某个具体类的实例。")])])])])]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://img-blog.csdnimg.cn/20200707204516186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0pNVzE0MDc=,size_16,color_FFFFFF,t_70",alt:"img"}}),t._v(" "),_("p",[t._v("类  ➡️  工厂,\t对象  ➡️  产品")]),t._v(" "),_("p",[t._v("使用产品的人，不需要知道产品是怎样生产出来的，只要会用就行。")]),t._v(" "),_("p",[_("strong",[t._v("降低模块与模块之间的耦合")]),t._v("。")])])}),[],!1,null,null,null);_.default=r.exports}}]);